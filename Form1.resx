<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCABIAIADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDxDFKBSgU4CvSEIFpwWnAU8LTsBHtpdtShKcEosK5AU4puKteX
        xTPLOc1SQiAril24Faem6Rd6zqdvp9jF5tzcOEjTIGT9T0rpdd+FPirQoftD2S3tuBlpbJvNC+uRgNx6
        4xUtxTs2M4bbSYqUrg4I5FAQmqsK5FtpCtTFcUwipsMiIpMVIRTSKQx4FPC0AVKopiGBDUiqR2qRVqVU
        qhEarmniOpRGe1dPpOiQxeGbnxFeoJkjuBaW1uM4eUjcWf0UDt3PFD0A5ZYsnFWobB5pFjSNndyFVVGS
        SegFa1vsuhsu41A/hkhjVWT8BgEe369c61tpv2WWK7gmUqn72JnUjcykEqQOh/H09aqwiroc/wDwiFzJ
        qbWvm6pEzw2qMTthfGGdsHk4bAHTnPYZ5601XV9JuDLYald2shO4tDKy5Pvg811et2pa5Vdu1REjBOwL
        KGP6k1jjS+fOniIgVWYFjtDkA4A9cnA4pcq3YFfxhMt/4u1G4AXPm7GYDG9lAUv9WILH61hlK0bnfNcS
        TPjdIxY4HGSc1WaP2oSsrBcpstRkVaaOoW2g43CkMgIphFTlajIqWMQGpUJ9aiC+9SqMds000BYT/eFW
        UU/3hVNQ/qBUyoxPL1SaJLqRk/xr+ddDoOu6rogaOzuk+zSHM1tJh4peMEMp4ORxXMJGMcsasRSLGcZ5
        PTnmqvF6NCszvUmsZgu/QNPgWQbgYbmRXHPX5nIx+Far2emR2brFI/lynKqCGw69D2x1weT19q4+LxJf
        zhFubppkUBcSAPgDjgEccVvWevQGKfZabTuMrSNJuIQY2IBgY+bHPTnpwKS0CzNWeyW5KXEUSqHAG+R1
        LMVAGFABK4+hPSue1HRJrvVPIspBcyOoJV2wwP8Ady2M/XFW9W1M2Wt3EMsayW4mLFDx5sbHcP0PB6jN
        Qa1ZWY0O8vl1G3uLYFPsIEwEwLMN0bITkYXPtnBB5OVzJBZnKX1jcWlzJb3EaxTRsVeN+Cp9DVFon/2P
        zpJLk9AxB9GpqzkAg7iabYWIpIzt5K/hVN4wB0H51baVifuD2qB5hnBUipuMqtkGoyze1WWIPTFRN9BU
        tlEatUqtVcGng0hllXH1p4nHReT7VVGT1PHpUqsAMCmIso7k8sB7Cpd4DZ7+tVFcAU8Sc0wLscuznua0
        rG9Ki4BPyeQ279Mf+Pbawt2cVNbXklpcrPHsLL/C6hlYdwQeCKLjOv8AFM/2jT9E1oZDX9niQerxMYi3
        4hVP51y5mL8mrWt+JbrXhZpNBa20FpEYoYLWPy0UEkk4yeSTzWMZMDrSjewFpnx3qNpAeDUO8bcZphbj
        1FO4iQuVOOopjMD1qMvj3FMLUgFYCoz7GkLU0tSGRg04NRRQA4NTw1FFADg9O8yiigB3mUB6KKYAXOKT
        d60UUAIXppeiigBu+mk0UUgGFqaTRRQB/9k=
</value>
  </data>
</root>